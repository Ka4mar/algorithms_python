"""
2.	Посчитать четные и нечетные цифры введенного натурального числа.
Например, если введено число 34560, то у него 3 четные цифры
(4, 6 и 0) и 2 нечетные (3 и 5).
Подсказка:
На каждом шаге вам нужно 'доставать' из числа очередную цифру
и смотреть является ли она четной или нечетной. При этом увеличиваем соответствующий счетчик
Пока все числа не извлечены рекурсивные вызовы продолжаем
Условие завершения рекурсии - все числа извлечены
Используем операции % //, НЕ ИСПОЛЬЗУЕМ ОПЕРАЦИИ ВЗЯТИЯ ЭЛЕМЕНТА ПО ИНДЕКСУ
Решите через рекурсию. Решение через цикл не принимается.
Для оценки Отлично в этом блоке необходимо выполнить 5 заданий из 7
Пример:
Введите число: 123
Количество четных и нечетных цифр в числе равно: (1, 2)
"""


num = int(input("Введите число подсчета: "))


def sum_even_odd(n, even=0, odd=0):

    if n == 0:
        return even, odd
    else:
        number, numerate = divmod(n, 10)

        if number % 2:
            even += 1
        else:
            odd += 1
        return sum_even_odd(number, even, odd)


print(sum_even_odd(num))

